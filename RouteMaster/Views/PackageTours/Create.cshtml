@model RouteMaster.Models.ViewModels.PackageTourCreateVM

@{
    ViewBag.Title = "Create";
}
@{
    Html.RenderAction("ActivitiesList");
}
@{
    Html.RenderAction("ExtraServicesList");
}

@{
    Html.RenderAction("AttractionsList");
 }

<h2>建立套裝行程</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="row">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="mb-3">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label col-md-2" })
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "form-label col-md-2" })
        <div class="checkbox">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.CouponId, htmlAttributes: new { @class = "form-label col-md-2" })
        @Html.DropDownList("CouponId", null, htmlAttributes: new { @class = "form-select" })
        @Html.ValidationMessageFor(model => model.CouponId, "", new { @class = "text-danger" })
    </div>

 


    <h2>活動列表</h2>
    <div id="activityContainer">


    </div>

    <h2>額外服務列表</h2>
    <div id="extraServiceContainer">


    </div>


    <h2>景點列表</h2>
    <div id="attractionContainer">


    </div>






    <div class="mb-3">
        <input type="submit" value="新增" class="btn btn-primary" />
    </div>
</div>

}


@section Scripts {

    <script>

        var activities = @Html.Raw(Json.Encode(ViewBag.Activities));
        var actsContainer = document.querySelector("#activityContainer");
        var addActBtns = document.querySelectorAll(".addActivity");
        var arrOfActivities =[];
        for (let i = 0; i < addActBtns.length; i++) {
            addActBtns[i].addEventListener('click', () => {

                var id = parseInt(addActBtns[i].getAttribute('data-id'));
                var newActivity = document.createElement("div");
                var actsContainerElementsLength = actsContainer.children.length;

                actsContainer.appendChild(newActivity);
                addActBtns[i].disabled = true;


                //console.log(activities)

                for (let j = 0; j < activities.length; j++) {
                    if (activities[j].Id === id) {
                        //console.log("找到符合條件的元素: ", activities[j]);
                        arrOfActivities.push(activities[j]);
                        newActivity.textContent = activities[j].Name;


                        // 生成複選框
                        var checkbox = document.createElement("input");
                        checkbox.type = "checkbox";
                        checkbox.name = "Activities[" + actsContainerElementsLength + "].Selected";
                        checkbox.value = activities[j].Id;
                        checkbox.checked = true;


                        var hiddenField = document.createElement("input");
                        hiddenField.type = "hidden";
                        hiddenField.name = "Activities[" + actsContainerElementsLength + "].Id";
                        hiddenField.value = activities[j].Id;

                        // 添加到表单

                        newActivity.appendChild(checkbox);
                        newActivity.appendChild(hiddenField);

                        break;
                    }
                }
            });
        } 













        var extraServices =@Html.Raw(Json.Encode(ViewBag.ExtraServices));
        var extContainer = document.querySelector("#extraServiceContainer");
        var addExtBtns = document.querySelectorAll(".addExtraService");
        var arrOfExtraServices = [];
        for (let i = 0; i < addExtBtns.length; i++) {
            addExtBtns[i].addEventListener('click', () => {


                var id = parseInt(addExtBtns[i].getAttribute('data-id'));




                var newExtraService = document.createElement("div");
                var extContainerElementsLength = extContainer.children.length;

                extContainer.appendChild(newExtraService);
                addExtBtns[i].disabled = true;


                for (let j = 0; j < extraServices.length; j++) {
                    if (extraServices[j].Id === id) {
          /*              console.log("找到符合條件的元素: ", extraServices[j])*/
                        arrOfExtraServices.push(extraServices[j]);
                        newExtraService.textContent = extraServices[j].Name;





                        // 生成複選框
                        var checkbox = document.createElement("input");
                        checkbox.type = "checkbox";
                        checkbox.name = "ExtraServices[" + extContainerElementsLength + "].Selected";
                        checkbox.value = extraServices[j].Id;
                        checkbox.checked = true;


                        var hiddenField = document.createElement("input");
                        hiddenField.type = "hidden";
                        hiddenField.name = "ExtraServices[" + extContainerElementsLength + "].Id";
                        hiddenField.value = extraServices[j].Id;

                        // 添加到表单

                        newExtraService.appendChild(checkbox);
                        newExtraService.appendChild(hiddenField);




                        break;
                    }
                }
            });
        }


        var attractions = @Html.Raw(Json.Encode(ViewBag.Attractions));
        var attsContainer = document.querySelector("#attractionContainer");
        var addAttBtns = document.querySelectorAll(".addAttraction");
        var arrOfAttractions =[];
        for (let i = 0; i < addAttBtns.length; i++) {
            addAttBtns[i].addEventListener('click', () => {
                //todo
                var id = parseInt(addAttBtns[i].getAttribute('data-id'));
                var newAttraction = document.createElement("div");
                var attractionsContainerElementsLength = attsContainer.children.length;

                attsContainer.appendChild(newAttraction);
                addAttBtns[i].disabled = true;

               

                for (let j = 0; j < attractions.length; j++) {
                    if (attractions[j].Id === id) {

                        arrOfAttractions.push(attractions[j]);
                        newAttraction.textContent = attractions[j].Name;




                        // 生成複選框
                        var checkbox = document.createElement("input");
                        checkbox.type = "checkbox";
                        checkbox.name = "Attractions[" + attractionsContainerElementsLength + "].Selected";
                        checkbox.value = attractions[j].Id;
                        checkbox.checked = true;


                        var hiddenField = document.createElement("input");
                        hiddenField.type = "hidden";
                        hiddenField.name = "Attractions[" + attractionsContainerElementsLength + "].Id";
                        hiddenField.value = attractions[j].Id;

                        // 添加到表单

                        newAttraction.appendChild(checkbox);
                        newAttraction.appendChild(hiddenField);



                        break;
                    }
                }
                
            });
        }

        
    </script>
}
