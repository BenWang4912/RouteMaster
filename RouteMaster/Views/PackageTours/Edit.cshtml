@model RouteMaster.Models.ViewModels.PackageTourEditVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new {id="EditPackageTour"}))
{
    @Html.AntiForgeryToken()
    
<div class="row">
  
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="mb-3">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="checkbox">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.CouponId, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.CouponId, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CouponId, "", new { @class = "text-danger" })
    </div>

    <hr/>
    <h2>景點</h2>
    <div class="mb-3">
        @for (int i = 0; i < Model.Attractions.Count; i++)
        {
            <p>@Model.Attractions[i].Name</p>
            <input type="checkbox" class="atts" value="@Model.Attractions[i].Id" checked="checked"/>    
        }
    </div>


    <hr />
    <h2>活動</h2>
    <div class="mb-3">
        @for (int i = 0; i < Model.Activities.Count; i++)
        {
            <p>@Model.Activities[i].Name</p>
            <input type="checkbox" class="acts" value="@Model.Activities[i].Id" checked="checked" />            
        }
    </div>

    
    <hr />
    <h2>服務項目</h2>
    <div class="mb-3">
        @for (int i = 0; i < Model.ExtraServices.Count; i++)
        {
            <p>@Model.ExtraServices[i].Name</p>
            <input type="checkbox" class="exts" value="@Model.ExtraServices[i].Id"  checked="checked" />
           
        }
    </div>




    <div class="mb-3">

        <input type="submit" value="Save" class="btn btn-primary" />

    </div>
</div>
}






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


<script>

    let oldAttCheckBoxies = document.querySelectorAll('.atts');
    for (var i = 0; i < oldAttCheckBoxies.length; i++) {
        (function (checkbox) {
            checkbox.addEventListener('change', function () {
                if (checkbox.checked) {
                    checkbox.setAttribute('checked', 'checked');
                    checkbox.classList.add('atts');
                   
                } else {
          
                    checkbox.removeAttribute('checked');
                    checkbox.classList.remove('atts');
                }
            });
        })(oldAttCheckBoxies[i]);
    }



    let oldActCheckBoxies = document.querySelectorAll('.acts');
    for (var i = 0; i < oldActCheckBoxies.length; i++) {
        (function (checkbox) {
            checkbox.addEventListener('change', function () {
                if (checkbox.checked) {
                    checkbox.setAttribute('checked', 'checked');
                    checkbox.classList.add('acts');

                } else {

                    checkbox.removeAttribute('checked');
                    checkbox.classList.remove('acts');
                }
            });
        })(oldActCheckBoxies[i]);
    }



    let oldExtCheckBoxies = document.querySelectorAll('.exts');
    for (var i = 0; i < oldExtCheckBoxies.length; i++) {
        (function (checkbox) {
            checkbox.addEventListener('change', function () {
                if (checkbox.checked) {
                    checkbox.setAttribute('checked', 'checked');
                    checkbox.classList.add('exts');

                } else {

                    checkbox.removeAttribute('checked');
                    checkbox.classList.remove('exts');
                }
            });
        })(oldExtCheckBoxies[i]);
    }






    const mainForm = document.querySelector('#EditPackageTour');
    mainForm.addEventListener('submit', function () {


        let attCheckBoxies = document.querySelectorAll('.atts');
        console.log(attCheckBoxies)

        for (let i = 0; i < attCheckBoxies.length; i++) {
            attCheckBoxies[i].setAttribute('name', "Attractions[" + i + "].Id");
        }

        let actCheckBoxies = document.querySelectorAll('.acts');
        for (let i = 0; i < actCheckBoxies.length; i++) {
            actCheckBoxies[i].setAttribute('name', "Activities[" + i + "].Id")
        }

        let extCheckBoxies = document.querySelectorAll('.exts');
        for (let i = 0; i < extCheckBoxies.length; i++) {
            extCheckBoxies[i].setAttribute('name', "ExtraServices[" + i + "].Id")
        }

    })




</script>


}
