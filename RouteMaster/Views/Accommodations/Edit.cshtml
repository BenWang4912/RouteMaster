@model RouteMaster.Models.ViewModels.AccommodationEditVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Accommodations", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="d-flex justify-content-center">

            <h4 class="me-auto">AccommodationEditVM</h4>
            <div class="mb-2">
                @Html.ActionLink("回到旅宿列表", "MyAccommodationIndex/{Model.PartnerId}", null, new { @class = "btn btn-dark" })
            </div>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="col-4">

            <div class="mb-3">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
                <textarea class="form-control w-100 mb-3 col-12 " style="margin:13px" rows="15" id="Description" name="Description">@Model.Description</textarea>
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div>
                <label class="form-label col-md-12 m-0">貴住宿的地址</label>
                <div class="d-flex row">
                    <div class="mb-3 col-xxl-3 col-xl-4 col-md-5  pe-0 ">
                        @Html.DropDownList("RegionId", null, htmlAttributes: new { @class = "form-control text-center", @id = "region" })
                        @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3 col-xxl-3 col-xl-4 col-md-5  pe-0">
                        @Html.DropDownList("TownId", null, htmlAttributes: new { @class = "form-control text-center", @id = "town" })
                        @Html.ValidationMessageFor(model => model.TownId, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3 col-xxl-6  col-sm-12  ">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id = "address" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.IndustryEmail, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IndustryEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IndustryEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.ParkingSpace, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ParkingSpace, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParkingSpace, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3">
                <div class="col-md-offset-2 col-md-10">
                    <input id="submit-btn" type="submit" value="Save" class="btn btn-primary " />
                </div>
            </div>
        </div>

        <div class="col-7 ms-5">
            @{ Html.RenderPartial("_ImageCorouselPartial", Model);}
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            var baseAddress = "https://localhost:44371";
            $("#region").on("change", function () {
                var regionId = $("#region").val();

                $.ajax({
                    type: "POST",
                    url: `${baseAddress}/Accommodations/ShowTownList`,
                    data: {
                        regionId: regionId
                    },
                    dataType: "json", // 指定返回的数据类型为 JSON
                    //contentType: "application/json"
                    //async: false, // 預設就是非同步
                    //timeout: 5000,
                    //        success: function (data) {
                    //            // 请求成功时的回调函数
                    //            $("#town").empty();

                    //            // 解析返回的 JSON 数据
                    //            //var townList = JSON.parse(data);

                    //            // 遍历返回的 Town 数据并添加到 DropDownList
                    //            $.each(data, function (index, town) {
                    //                $("#town").append($('<option></option>').val(town.regionId).text(town.name));
                    //            });
                    //        },
                    //        error: function (err) {
                    //            $("#town").empty().append($('<option></option>').text("請選擇"));
                    //        }
                    //    });
                    //});
                }).done(data => {
                    // 清空 Town DropDownList 的选项
                    $("#town").empty();

                    // 遍历返回的 Town 数据并添加到 DropDownList
                    $.each(data, function (index, town) {
                        $("#town").append($('<option></option>').val(town.townId).text(town.name));
                    });
                }).fail(err => {
                    $("#town").empty().append($('<option></option>').val("").text("請選擇"));
                });

            });

            $("#edit-img-name").on('click', function () {
                const imgPath = $(".active").children().children('input')[0].id;
                const imgName = $(".active").children().children('input')[0].value;
                $.ajax({
                    type: "POST",
                    url: `${baseAddress}/Accommodations/EditImgName`,
                    data: {
                        imgPath:imgPath,
                        imgName:imgName

                    },
                }).done(data => {
                    // 清空 Town DropDownList 的选项
                    alert("修改成功");
                }).fail(err => {
                    alert("修改失敗");
                });

            });

            $("#delete-img").on('click', function () {
                const imgPath = $(".active").children().children('input')[0].id;
                console.log(imgPath);
                $.ajax({
                    type: "POST",
                    url: `${baseAddress}/Accommodations/DeleteImage`,
                    data: {
                        imgPath: imgPath,
                    },

                }).done(data => {
                    // 清空 Town DropDownList 的选项
                    alert("修改成功");
                    location.reload();
                }).fail(err => {
                    alert("修改失敗");
                });

            });

        });

    </script>
}
