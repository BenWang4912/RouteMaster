@model RouteMaster.Models.ViewModels.AccommodationEditVM

@section Styles{
    <style>
        .exist-image:hover {
            transform: scale(1.1);
            cursor: pointer;
        }
    </style>
}
@{
    ViewBag.Title = "Edit";
    var images = Model.AccommodationImages != null? Model.AccommodationImages.ToArray():new RouteMaster.Models.EFModels.AccommodationImage[0];
}

@{ Html.RenderPartial("_AccommodationNavPartial", new RouteMaster.Models.Dto.Accommodation.NavDto { Id = Model.Id, Parameter = "accommodation" });}

@using (Html.BeginForm("Edit", "Accommodations", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="d-flex justify-content-center">

            <h2 class="me-auto">編輯住所資訊</h2>

        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="col-4">

            <div class="mb-3">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
                <textarea class="form-control w-100 mb-3 col-12 " style="margin:13px" rows="15" id="Description" name="Description">@Model.Description</textarea>
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div>
                <label class="form-label col-md-12 m-0">貴住宿的地址</label>
                <div class="d-flex row">
                    <div class="mb-3 col-xxl-3 col-xl-4 col-md-5  pe-0 ">
                        @Html.DropDownList("RegionId", null, htmlAttributes: new { @class = "form-control text-center", @id = "region" })
                        @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3 col-xxl-3 col-xl-4 col-md-5  pe-0">
                        @Html.DropDownList("TownId", null, htmlAttributes: new { @class = "form-control text-center", @id = "town" })
                        @Html.ValidationMessageFor(model => model.TownId, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3 col-xxl-6  col-sm-12  ">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id = "address" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.IndustryEmail, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IndustryEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IndustryEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.ParkingSpace, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ParkingSpace, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParkingSpace, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3 d-flex">
                <div class="col-md-offset-2 col-md-10">
                    <input id="submit-btn" type="submit" value="確認編輯" class="btn btn-primary " />
                    @Html.ActionLink("放棄編輯", $"Details/{Model.Id}", null, new { @class = "btn btn-danger" })
                </div>

            </div>
        </div>

        <div class="col-7 ms-5">
            @{ Html.RenderPartial("_ImageCorouselPartial");}
            @if (images.Any())
            {

                <div class="imageInDb-preview border border-1 border-primary mt-3" id="imageInDbPreview">
                    <h3 class="m-3 text-primary">已經建立的照片</h3>
                    @foreach (var image in images)
                    {
                        <img src="~/Uploads/@image.Image" class="preview-image exist-image" id="exist-image-@image.Id" alt="@image.Name">
                    }
                </div>
            }
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    const carousel =
        `
    <div class="big">
        <div class="area">
            <div class="content">
                <div id="carouselExampleDark" class="carousel slide h-100" data-bs-ride="carousel">
                    <div class="carousel-indicators">
                        <button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                        @for (int i = 1; i < images.Count(); i++)
                        {
                            <button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="@i" aria-label="Slide @(i+1)"></button>
                        }

                    </div>
                    <div class="carousel-inner h-100">


                        @for (int i = 0; i < images.Count(); i++)
                        {
                            if (i == 0)
                            {
                                <div class="carousel-item active h-100" data-bs-interval="1000000">
                                    <img src="~/Uploads/@images[0].Image" class="d-block w-100 BigImg" alt="@images[0].Name">
                                    <div class="carousel-caption d-none d-md-block">
                                        <input id="@images[0].Image" type="text" class="text-white d-inline form-control w-25 text-center" style="background-color:#67676799" value="@images[0].Name" />
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="carousel-item h-100" data-bs-interval="1000000">
                                    <img src="~/Uploads/@images[i].Image" class="d-block w-100 BigImg" alt="@images[i].Name">
                                    <div class="carousel-caption d-none d-md-block">
                                        <input id="@images[i].Image" type="text" class="text-white d-inline form-control w-25 text-center" style="background-color:#67676799" value="@images[i].Name" />
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon rounded-circle" style="background-color:#67676799;" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="next">
                        <span class="carousel-control-next-icon rounded-circle" style="background-color:#67676799" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
            <div class="btns d-flex justify-content-center align-items-center">
                <input id="edit-img-name" type="button" class="btn btn-primary me-3" value="修改照片名">
                <input id="delete-img" type="button" class="btn btn-danger" value="刪除照片">
            </div>
        </div>
</div>
        `;

        $(function () {
            var baseAddress = "https://localhost:44371";
            $("#region").on("change", function () {
                var regionId = $("#region").val();

                $.ajax({
                    type: "POST",
                    url: `${baseAddress}/Accommodations/ShowTownList`,
                    data: {
                        regionId: regionId
                    },
                    dataType: "json", // 指定返回的数据类型为 JSON
                    //contentType: "application/json"
                    //async: false, // 預設就是非同步
                    //timeout: 5000,
                    //        success: function (data) {
                    //            // 请求成功时的回调函数
                    //            $("#town").empty();

                    //            // 解析返回的 JSON 数据
                    //            //var townList = JSON.parse(data);

                    //            // 遍历返回的 Town 数据并添加到 DropDownList
                    //            $.each(data, function (index, town) {
                    //                $("#town").append($('<option></option>').val(town.regionId).text(town.name));
                    //            });
                    //        },
                    //        error: function (err) {
                    //            $("#town").empty().append($('<option></option>').text("請選擇"));
                    //        }
                    //    });
                    //});
                }).done(data => {
                    // 清空 Town DropDownList 的选项
                    $("#town").empty();

                    // 遍历返回的 Town 数据并添加到 DropDownList
                    $.each(data, function (index, town) {
                        $("#town").append($('<option></option>').val(town.townId).text(town.name));
                    });
                }).fail(err => {
                    $("#town").empty().append($('<option></option>').val("").text("請選擇"));
                });

            });

            $("#edit-img-name").on('click', function () {
                const imgPath = $(".active").children().children('input')[0].id;
                const imgName = $(".active").children().children('input')[0].value;
                $.ajax({
                    type: "POST",
                    url: `${baseAddress}/Accommodations/EditImgName`,
                    data: {
                        imgPath:imgPath,
                        imgName:imgName

                    },
                }).done(data => {
                    // 清空 Town DropDownList 的选项
                    alert("修改成功");
                }).fail(err => {
                    alert("修改失敗");
                });

            });

            $("#delete-img").on('click', function () {
                const imgPath = $(".active").children().children('input')[0].id;
                $.ajax({
                    type: "POST",
                    url: `${baseAddress}/Accommodations/DeleteImage`,
                    data: {
                        imgPath: imgPath,
                    },

                }).done(data => {
                    // 清空 Town DropDownList 的选项
                    alert("刪除成功");
                    location.reload();
                }).fail(err => {
                    alert("刪除失敗");
                });

            });

            $(".exist-image").on('click', function (e) {
                $(".big").addClass('bigShow');

                $('.carousel-item').removeClass('active');

                const imagePath = $(this).attr('src');
                const targetItem = $(`.carousel-item img[src='${imagePath}']`).closest('.carousel-item');
                targetItem.addClass('active');
            });

        });


    </script>
    <script src="~/Scripts/ShowBigImages.js"></script>

}
