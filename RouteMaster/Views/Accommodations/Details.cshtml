@model RouteMaster.Models.Infra.ViewModels.Accommodations.AccommodationInfoVM

@{
    ViewBag.Title = "Details";
    var images = Model.AccommodationImages.ToArray();
}

@section Styles{

}

@{ Html.RenderPartial("_AccommodationNavPartial", new RouteMaster.Models.Dto.Accommodation.NavDto{ Id = Model.Id, Parameter = "accommodation" });}

<h2>住所資訊</h2>

<div class="d-flex">
    <h4 class="d-flex justify-content-center align-items-center m-0">@Html.DisplayFor(model => model.Name)</h4>
    @if (!string.IsNullOrEmpty(Model.Grade))
    {
        <div class="score-div bg-primary text-white d-flex justify-content-center align-items-center rounded-2 ms-2" style="width: 32px; height: 32px; letter-spacing:1px">@Html.DisplayFor(model => model.Grade)</div>
    }
</div>

<hr />
<div class="row">
    <div class="col-4">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd class="mb-3">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", disabled = "disabled", style = "height: 250px" })
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Address)
            </dt>

            <dd class="mb-3">
                @Html.DisplayFor(model => model.Address)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </dt>

            <dd class="mb-3">
                @Html.DisplayFor(model => model.PhoneNumber)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Website)
            </dt>

            <dd class="mb-3">
                @Html.DisplayFor(model => model.Website)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IndustryEmail)
            </dt>

            <dd class="mb-3">
                @Html.DisplayFor(model => model.IndustryEmail)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ParkingSpace)
            </dt>

            <dd class="mb-3">
                @Html.DisplayFor(model => model.ParkingSpace)
            </dd>
        </dl>
    </div>
    <div class="col-7 ms-3">
        @if (Model.AccommodationImages.Any())
        {

            <div id="carouselExampleDark" class="carousel slide h-100" data-bs-ride="carousel">
                <div class="carousel-indicators">
                    <button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                    @for (int i = 1; i < images.Count(); i++)
                    {
                        <button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="@i" aria-label="Slide @(i+1)"></button>
                    }

                </div>
                <div class="carousel-inner h-100">


                    @for (int i = 0; i < images.Count(); i++)
                    {
                        if (i == 0)
                        {
                            <div class="carousel-item active h-100" data-bs-interval="1000000">
                                <img src="~/Uploads/@images[0].Image" class="d-block w-100 BigImg" alt="@images[0].Name">
                                <div class="carousel-caption d-none d-md-block">
                                    <input id="@images[0].Image" type="text" class="text-white d-inline form-control w-25 text-center" style="background-color:#67676799" value="@images[0].Name" />
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="carousel-item h-100" data-bs-interval="1000000">
                                <img src="~/Uploads/@images[i].Image" class="d-block w-100 BigImg" alt="@images[i].Name">
                                <div class="carousel-caption d-none d-md-block">
                                    <input id="@images[i].Image" type="text" class="text-white d-inline form-control w-25 text-center" style="background-color:#67676799" value="@images[i].Name" />
                                </div>
                            </div>
                        }
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon rounded-circle" style="background-color:#67676799;" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="next">
                    <span class="carousel-control-next-icon rounded-circle" style="background-color:#67676799" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        }
    </div>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn-css" }) |
    @Html.ActionLink("Back to List", "MyAccommodationIndex", "", new { @class = "btn-css" })
</p>
