@model RouteMaster.Models.ViewModels.AccomodationDetailsEditVM
<link rel="stylesheet" type="text/css" href="path/to/sweetalert2.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.6/dist/sweetalert2.min.css">
@{
    ViewBag.Title = "AccomodationDetailsEdit";
}

<h2>住宿訂單管理</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>AccomodationDetailsEditVM</h4>*@
        <hr />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)*@

        <div class="form-group">
            @Html.LabelFor(model => model.OrderId, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10 ">
                @Html.EditorFor(model => model.OrderId, new { htmlAttributes = new { @class = "form-control ", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.OrderId, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.OrderId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccommodationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccommodationId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.AccommodationId, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.AccommodationId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccommodationName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccommodationName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.AccommodationName, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.AccommodationName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoomType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoomType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoomType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.RoomName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoomName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoomName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.CheckIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <br />
            <input type="date" id="CheckInDate" />
            <input type="time" id="CheckIn" />
            @Html.EditorFor(model => model.CheckIn, new { htmlAttributes = new { @class = "form-control", @id = "CheckInEditor" } })
            @Html.ValidationMessageFor(model => model.CheckIn, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.CheckOut, htmlAttributes: new { @class = "control-label col-md-2" })
            <br />
            <input type="date" id="CheckOutDate" />
            <input type="time" id="CheckOut" />
            @Html.EditorFor(model => model.CheckOut, new { htmlAttributes = new { @class = "form-control", @id = "CheckOutEditor" } })
            @Html.ValidationMessageFor(model => model.CheckOut, "", new { @class = "text-danger" })

        </div>

        <div class="mb-4">
            <div class="mb-3">
                @Html.LabelFor(model => model.RoomPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RoomPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoomPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4 col-md-10 mb-4 alert" role="alert">
                <div class="btn-group mb-3" role="group" aria-label="Save and Back buttons">
                    <button id="demo1" class="btn btn-primary" style="width:100px;">儲存</button>
                    <div class="btn-group" role="group" aria-label="Back button">
                        @Html.ActionLink("回上頁", "Index", "", new { @class = "btn btn-warning" })
                    </div>
                </div>
            </div>
        </div>


    </div>


}

@*<div class="form-actions no-color">

        @Html.ActionLink("Back to List", "Index", "", new { @class = "btn-css-warning" })
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.6/dist/sweetalert2.all.min.js"></script>
    @*<script>
        $("#demo1").click(function () {
           
            Swal.fire({
                title: "發送成功",
                text: "已成功記錄",
                icon: "success",
                confirmButtonColor: "#3085d6",
                confirmButtonText: "確定"
            });
        });
     </script>*@
    <script>



        // 日期選擇
        var CheckInDateInput = document.querySelector('#CheckInDate');
        var CheckInTimeInput = document.querySelector('#CheckIn');
        var CheckOutDateInput = document.querySelector('#CheckOutDate');
        var CheckOutTimeInput = document.querySelector('#CheckOut');
        var CheckInEditor = document.querySelector('#CheckInEditor');
        var CheckOutEditor = document.querySelector('#CheckOutEditor');

        CheckInDateInput.addEventListener('change', updateCheckIn);
        CheckInTimeInput.addEventListener('change', updateCheckIn);
        CheckOutDateInput.addEventListener('change', updateCheckOut);
        CheckOutTimeInput.addEventListener('change', updateCheckOut);

        function updateCheckIn() {
            var CheckInDateValue = CheckInDateInput.value;
            var CheckInTimeValue = CheckInTimeInput.value;
            var dateTimeValue = CheckInDateValue + " " + CheckInTimeValue;
            CheckInEditor.value = dateTimeValue;
        }

        function updateCheckOut() {
            var CheckOutDateValue = CheckOutDateInput.value;
            var CheckOutTimeValue = CheckOutTimeInput.value;
            var dateTimeValue = CheckOutDateValue + " " + CheckOutTimeValue;
            CheckOutEditor.value = dateTimeValue;
        }
    </script>
    <script>

    </script>

}
